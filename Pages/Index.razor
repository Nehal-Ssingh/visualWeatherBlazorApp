@page "/"

@inject IConfiguration Configuration
@* allows you to access the code in appsettings.json for the api key and the api host *@

<PageTitle>Index</PageTitle>

<button @onclick="GetWeather">Get Weather</button>

<pre>@weather</pre>

@code {
    string weather = "No Data";

    HttpClient client = new HttpClient();

    public async Task GetWeather()
    {
        var apiKey = Configuration["WeatherApi:ApiKey"];
        var apiHost = Configuration["WeatherApi:ApiHost"];
        //api key and api host moved to appsettings.json

        var request = new HttpRequestMessage
            {
                Method = HttpMethod.Get,
                RequestUri = new Uri("https://visual-crossing-weather.p.rapidapi.com/history?startDateTime=2019-01-01T00%3A00%3A00&aggregateHours=24&location=Washington%2CDC%2CUSA&endDateTime=2019-01-03T00%3A00%3A00&unitGroup=us&dayStartTime=8%3A00%3A00&contentType=csv&dayEndTime=17%3A00%3A00&shortColumnNames=0"),
                Headers =
      {
            { "X-RapidAPI-Key", apiKey },
            { "X-RapidAPI-Host", apiHost },
        },
            };

        try
        {
            using (var response = await client.SendAsync(request))
            {
                response.EnsureSuccessStatusCode();
                var body = await response.Content.ReadAsStringAsync();
                weather = body;
            }
        }
        catch (HttpRequestException ex)
        {
            // Handle HTTP request errors
            weather = $"Error: {ex.Message}";
        }
    }
}